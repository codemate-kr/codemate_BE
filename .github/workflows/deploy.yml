name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      - name: Gradle 빌드
        run: ./gradlew build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/codemate:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/codemate:latest

      - name: EC2 배포
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 기존 컨테이너 중지 및 제거
            docker stop codemate || true
            docker rm codemate || true

            # 최신 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/codemate:latest

            # 새 컨테이너 실행 (환경변수는 EC2의 .env 파일 사용)
            docker run -d \
              --name codemate \
              --restart unless-stopped \
              --network codemate-network \
              -p 8080:8080 \
              --env-file ~/.env \
              ${{ secrets.DOCKER_USERNAME }}/codemate:latest

            # 사용하지 않는 이미지 정리
            docker image prune -af
